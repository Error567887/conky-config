-- Conky, a system monitor https://github.com/brndnmtthws/conky
--
-- This configuration file is Lua code. You can write code in here, and it will
-- execute when Conky loads. You can use it to generate your own advanced
-- configurations.
--
-- Try this (remove the `--`):
--
--   print("Loading Conky config")
--
-- For more on Lua, see:
-- https://www.lua.org/pil/contents.html

conky.config = {
    alignment = 'tr',
    background = true,
    border_width = 0,
    cpu_avg_samples = 2,
    default_color = 'white',
    default_outline_color = 'white',
    default_shade_color = 'white',
    double_buffer = true,
    draw_borders = false,
    draw_graph_borders = true,
    draw_outline = false,
    draw_shades = false,
    extra_newline = false,
    font = 'DejaVu Sans Mono:size=12',
    gap_x = 0,
    gap_y = 0,
    minimum_height = 0,
    minimum_width = 0,
    net_avg_samples = 2,
    no_buffers = true,
    out_to_console = false,
    out_to_ncurses = false,
    out_to_stderr = false,
    out_to_x = true,
    own_window = true,
    own_window_class = 'Conky',
    own_window_type = 'desktop',
    show_graph_range = false,
    show_graph_scale = false,
    stippled_borders = 0,
    update_interval = 1.0,
    uppercase = false,
    use_spacer = 'none',
    use_xft = true,
    double_buffer = true,
    override_utf8_locale = true,
    own_window_argb_visual = true,
    own_window_argb_value = 50, 
}

conky.text = [[
${color #00FFFF}${font DejaVu Sans Mono:bold:underlined:size=10}Nowhere-Laptop${alignr}${time %d-%m-%y}
$hr

${color grey}Uptime:$color $uptime
${color #00FFFF}Kernel $kernel 

${font sans-serif:bold:size=10}MEMORY ${hr 2}
${font sans-serif:normal:size=8}RAM $alignc $mem / $memmax $alignr $memperc%
$membar
SWAP $alignc ${swap} / ${swapmax} $alignr ${swapperc}%
${swapbar}
$hr

${color #9F2B68}${font sans-serif:bold:size=10}PROCESSOR ${hr}`
${font sans-serif:normal:size=8}${color #9F2B68}${execi 1000 grep model /proc/cpuinfo | cut -d : -f2 | tail -1 | sed 's/\s//'}
CPU: ${color #9F2B68}${cpu cpu1}% ${color #9F2B68}${cpubar cpu1}
${color #9F2B68}Processes:${color #9F2B68} $processes  ${color #9F2B68}Running:${color #9F2B68} $running_processes
${color #9F2B68}Frequency:  ${color #9F2B68}(in MHz):${color #9F2B68}$freq
${color #9F2B68}CPU Temperature:${color #9F2B68}${alignr}${texeci 30 sensors | grep "Package id 0" | cut -d ':' -f 2 | cut -d '(' -f 1 | tr -d ' '}
$hr

$color$hr
$color${goto 10}${font FontAwesome:bold:size=10}ï‡€${font} ${color #00FF00}Storage Drives${color}
${font DejaVu Sans Mono:bold:size=10}${color red}Root${color} ($color${fs_type /}${color0}) ${alignr}$color${diskio_write /dev/sda6}${color0}/$color${diskio_read /dev/sda6}
${fs_used /}${color0}/$color${fs_size /} ${alignr}$color${fs_used_perc /}% ${color0}${fs_bar 8,100 /}
$color$hr

${color orange}NETWORK ${hr 2}
${font sans-serif:normal:size=8}Local IPs:${alignr}External IP:
${execi 1000 ip a | grep inet | grep -vw wlan | grep -v inet6 | cut -d \/ -f1 | sed 's/[^0-9\.]*//g'}  ${alignr}${execi 1000  wget -q -O- http://ipecho.net/plain; echo}
${font sans-serif:normal:size=8}Down: ${downspeed wlan0}  ${alignr}Up: ${upspeed wlan0}
$hr

${color #9F2B68}${font sans-serif:bold:size=10} PROCESSES ${hr}
${color grey}Name              PID     CPU%   MEM%
${color lightgrey} ${top name 1} ${top pid 1} ${top cpu 1} ${top mem 1}
${color lightgrey} ${top name 2} ${top pid 2} ${top cpu 2} ${top mem 2}
${color lightgrey} ${top name 3} ${top pid 3} ${top cpu 3} ${top mem 3}
${color lightgrey} ${top name 4} ${top pid 4} ${top cpu 4} ${top mem 4}
]]
